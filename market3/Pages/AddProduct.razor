@using Microsoft.AspNetCore.SignalR.Client
@using market3.DataBase;
@inject NavigationManager NavigationManager
@inject IJSRuntime IJSRuntime
@page "/addproduct"
<h3> Добавить Новый товар</h3>
<EditForm Model="@newTovar" OnValidSubmit="@HandleValidSubmit">
    <DataAnnotationsValidator />
    <ValidationSummary />
    <p>
        <label>

            Название: <InputText @bind-Value="newTovar.Name" />

        </label>
    </p>

    <p>
        <label>

            Описание: <InputText @bind-Value="newTovar.Description" />


        </label>
    </p>

    <div>
        <label>
            Изображение:
        </label>
        <InputFile class="form-control" id="image" OnChange="@SingleUpload" @bind-Value="@newTovar.Image" accept=".jpg,.jpeg,.png,.gif" />
    </div>

    <div>
        <label>

            Категория:
        </label>
        <div>
            <InputSelect @bind-Value="newTovar.CategoryId">
                @foreach(var category in categories)
                {
                    <option value="@category.Id">@category.Name</option>
                }
            </InputSelect>
        </div>

    </div>

    <p>
        <label>

            Цена: <InputNumber @bind-Value="newTovar.Price" />

        </label>

    </p>
    <p>
        <label>

            Кол-во: <InputNumber @bind-Value="newTovar.Quantity" />

        </label>
    </p>


    <button type="submit" class="btn btn-primary"> Добавить </button>
    <button class="btn btn-danger" @onclick="Exit">Выйти</button>
</EditForm>
<Modal IsVisible="@showModalsuccess" ModalTitle="Успех">
    <p>
        Товар добавлен
    </p>

</Modal>
<Modal IsVisible="@showModalerror" ModalTitle="Ошибка">
    <p>
        Такой товар уже есть
    </p>

</Modal>
@code {
    private bool showModalsuccess = false;
    private bool showModalerror = false;
    private List<Category> categories = new List<Category>();
    private Tovar newTovar = new Tovar();
    private List<int> selectedCategories = new List<int>();
    private HubConnection? hubConnection;
    protected override async Task OnInitializedAsync()
    {
        await LoadCategory();

    }
    private async Task LoadCategory()
    {



        hubConnection = new HubConnectionBuilder().WithUrl("http://localhost:5122/producthub").Build();
        await hubConnection.StartAsync();
        hubConnection.On<List<Category>>("ReceiveCategory", (categoryFromServer) =>
        {
            categories = categoryFromServer;
            InvokeAsync(StateHasChanged);
        });
        await hubConnection.InvokeAsync("GetCategoriesAsync");
   
    }
    private async Task HandleValidSubmit()
    {
        hubConnection = new HubConnectionBuilder().WithUrl("http://localhost:5122/producthub").Build();
        await hubConnection.StartAsync();
        await hubConnection.SendAsync("AddProduct", newTovar.Name, newTovar.Description, newTovar.Image, newTovar.CategoryId, newTovar.Price, newTovar.Quantity);
        hubConnection.On<string>("ProductAdded", async (success) =>
      {

      showModalsuccess = true;


      });
        hubConnection.On<string>("AddError", async (error) =>
      {

          showModalerror = true;

      });
    } 

    private async Task SingleUpload(InputFileChangeEventArgs e)
    {
        MemoryStream ms = new MemoryStream();
        await e.File.OpenReadStream().CopyToAsync(ms);
        var bytes = ms.ToArray();
        newTovar.Image = bytes;
    }
    private void Exit ()
    {
        NavigationManager.NavigateTo("/");
    }
    public void Dispose()
    {
        hubConnection?.DisposeAsync();
    }
}
