@using Microsoft.AspNetCore.SignalR.Client
@using market3.DataBase;
@using Microsoft.AspNetCore.Components.Forms;
@inject NavigationManager NavigationManager;
@page "/Register"
<h3>Регистрация пользователя</h3>
<EditForm Model="user" OnValidSubmit="HandleRegister">
    <p>
        <div>
            <label> Имя пользователя</label>
            <InputText @bind-Value="@user.Name" />


        </div>
    </p>

    <p>
        <div>
            <label>Кто вы на сайте</label>
            <InputSelect @bind-Value="user.RoleId">
                @foreach(var role in roles)
                {
                    <option value="@role.Id">@role.Name</option>
                }
            </InputSelect>
        </div>
    </p>
    <p>
        <div>
            <label> Пароль</label>
            <InputText @bind-Value="@user.Password" />
        </div>
    </p>

    <button type="submit">Зарегистрироваться</button>
</EditForm>

@code {
    private List<Role> roles = new List<Role>();
    private HubConnection hubConnection;
    private User user = new User();  
    protected override async Task OnInitializedAsync()
    {
        await LoadRole();
        await Register();

    }
    private async Task LoadRole()
    {
        var hubConnection = new HubConnectionBuilder().WithUrl("http://localhost:5122/producthub").Build();
        await hubConnection.StartAsync();
        hubConnection.On<List<Role>>("ReceiveRole", (roleFromServer) =>
        {
            roles = roleFromServer;
            InvokeAsync(StateHasChanged);
        });
        await hubConnection.InvokeAsync("GetRole");
    }
    private async Task Register()
    {
        var hubConnection = new HubConnectionBuilder().WithUrl("http://localhost:5122/producthub").Build();
        await hubConnection.StartAsync();
        hubConnection.On("RegisterResult", (bool success) =>
        {
            if (success)
            {
                
                NavigationManager.NavigateTo("/");
            }
        });
    }
    private async Task HandleRegister()
    {
        
        await hubConnection.SendAsync("Register", user.Name, user.RoleId,user.Password);
    }
    public void Disponse()
    {
        hubConnection?.DisposeAsync();
    }
}
